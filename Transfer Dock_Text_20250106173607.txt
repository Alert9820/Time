<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Digital Watch</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            background-color: #121212;
            color: white;
            height: 100vh;
            margin: 0;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            transition: background-color 0.5s, color 0.5s;
        }
        .clock {
            font-size: 60px;
            margin: 20px;
            text-shadow: 0 0 15px #1e90ff;
        }
        .date {
            font-size: 24px;
            margin-bottom: 20px;
        }
        .button-container {
            display: flex;
            gap: 15px;
            margin: 20px;
        }
        .button {
            background-color: #1e90ff;
            border: none;
            color: white;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
            transition: all 0.3s ease;
            box-shadow: 0 0 10px #1e90ff, 0 0 20px #1e90ff;
        }
        .button:hover {
            background-color: #4682b4;
            box-shadow: 0 0 15px #4682b4, 0 0 30px #4682b4;
        }
        .dark-mode-toggle {
            margin: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }
        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: 0.4s;
            border-radius: 24px;
        }
        .slider:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: 0.4s;
            border-radius: 50%;
        }
        input:checked + .slider {
            background-color: #1e90ff;
        }
        input:checked + .slider:before {
            transform: translateX(26px);
        }
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(8px);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 10;
        }
        .popup {
            background: #1c1c1c;
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
            max-width: 400px;
            width: 90%;
        }
        .popup h3 {
            margin: 0 0 15px 0;
        }
        .popup button {
            margin-top: 15px;
        }
    </style>
</head>
<body>

    <div class="clock" id="time">00:00:00</div>
    <div class="date" id="date">Date</div>
    <div class="button-container">
        <button class="button" onclick="showPopup('alarmPopup')">Set Alarm</button>
        <button class="button" onclick="showPopup('weatherPopup')">Weather</button>
        <button class="button" onclick="speakTime()">Speak Time</button>
    </div>

    <div class="dark-mode-toggle">
        <span>Light Mode</span>
        <label class="switch">
            <input type="checkbox" id="themeToggle" onchange="toggleTheme()">
            <span class="slider"></span>
        </label>
        <span>Dark Mode</span>
    </div>

    <!-- Overlay and Popups -->
    <div id="overlay" class="overlay">
        <div id="alarmPopup" class="popup" style="display: none;">
            <h3>Set Alarm</h3>
            <input type="time" id="alarmTime">
            <button class="button" onclick="setAlarm()">Set Alarm</button>
            <button class="button" onclick="hidePopup()">Close</button>
            <div id="alarmMessage"></div>
        </div>
        <div id="weatherPopup" class="popup" style="display: none;">
            <h3>Weather</h3>
            <input type="text" id="cityName" placeholder="Enter City Name">
            <button class="button" onclick="getWeather()">Check Weather</button>
            <button class="button" onclick="hidePopup()">Close</button>
            <div id="weatherInfo">Weather will be shown here.</div>
        </div>
    </div>

    <script>
        // Update clock
        setInterval(() => {
            const now = new Date();
            const hours = now.getHours() % 12 || 12; // Convert to 12-hour format
            const ampm = now.getHours() >= 12 ? 'PM' : 'AM';
            const minutes = String(now.getMinutes()).padStart(2, '0');
            const seconds = String(now.getSeconds()).padStart(2, '0');
            const date = now.toDateString();
            document.getElementById('time').textContent = `${hours}:${minutes}:${seconds} ${ampm}`;
            document.getElementById('date').textContent = date;
        }, 1000);

        // Show popup
        function showPopup(popupId) {
            document.getElementById('overlay').style.display = 'flex';
            document.getElementById(popupId).style.display = 'block';
        }

        // Hide popup
        function hidePopup() {
            document.getElementById('overlay').style.display = 'none';
            document.querySelectorAll('.popup').forEach(popup => popup.style.display = 'none');
        }

        // Speak time
        function speakTime() {
            const time = document.getElementById('time').textContent;
            const utterance = new SpeechSynthesisUtterance(`The current time is ${time}`);
            speechSynthesis.speak(utterance);
        }

        // Toggle theme
        function toggleTheme() {
            const isDark = document.getElementById('themeToggle').checked;
            document.body.style.backgroundColor = isDark ? '#121212' : '#f5f5f5';
            document.body.style.color = isDark ? 'white' : 'black';
        }

        // Set alarm
        function setAlarm() {
            const alarmTime = document.getElementById('alarmTime').value;
            const message = document.getElementById('alarmMessage');
            if (alarmTime) {
                const [hours, minutes] = alarmTime.split(':');
                const now = new Date();
                const alarmDate = new Date(
                    now.getFullYear(),
                    now.getMonth(),
                    now.getDate(),
                    hours,
                    minutes,
                    0
                );
                const timeToAlarm = alarmDate - now;
                if (timeToAlarm >= 0) {
                    setTimeout(() => alert('Alarm ringing!'), timeToAlarm);
                    message.textContent = `Alarm set for ${alarmTime}`;
                } else {
                    message.textContent = 'Please set a future time.';
                }
            }
        }

        // Fetch city weather
        async function getWeather() {
            const city = document.getElementById('cityName').value;
            const apiKey = 'c2966089eb4df3bff11195a7e895a498'; // Replace with your OpenWeatherMap API key
            const weatherInfo = document.getElementById('weatherInfo');
            try {
                const response = await fetch(
                    `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`
                );
                const data = await response.json();
                weatherInfo.textContent = data.main
                    ? `${city}: ${data.main.temp}Â°C, ${data.weather[0].description}`
                    : 'Weather data not found.';
            } catch {
                weatherInfo.textContent = 'Unable to fetch weather data.';
            }
        }
    </script>
</body>
</html>